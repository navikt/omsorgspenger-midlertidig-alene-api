ktor {
    deployment {
        port = 8080
        port = ${?PORT}
    }
    application {
      id = omsorgspenger-midlertidig-alene-api
        modules = [no.nav.omsorgspengermidlertidigalene.AppKt.omsorgpengermidlertidigaleneapi]
    }
}

nav {
    cors {
        addresses = ""
        addresses = ${?CORS_ADDRESSES}
    }
    gateways {
        k9_oppslag_url = "",
        k9_oppslag_url = ${?K9_OPPSLAG_REGISTER_URL}
    }
    auth {
        clients = [{
            alias = "azure-v2"
            client_id = ""
            client_id = ${?AZURE_APP_CLIENT_ID}
            private_key_jwk = ""
            private_key_jwk = ${?AZURE_APP_JWK}
            certificate_hex_thumbprint = ""
            certificate_hex_thumbprint = "Ikke i bruk. Hentes ut av AZURE_JWK"
            discovery_endpoint = ""
            discovery_endpoint = ${?AZURE_APP_WELL_KNOWN_URL}
        },{
             alias = "tokenx"
             client_id = ${?TOKEN_X_CLIENT_ID}
             private_key_jwk = ${?TOKEN_X_PRIVATE_JWK}
             discovery_endpoint = ${?TOKEN_X_WELL_KNOWN_URL}
        }]
        issuers = [{
           alias = "login-service-v1"
           discovery_endpoint = ""
           discovery_endpoint = ${?LOGIN_SERVICE_V1_DISCOVERY_ENDPOINT}
       },{
           alias = "login-service-v2"
           discovery_endpoint = ""
           discovery_endpoint = ${?LOGINSERVICE_IDPORTEN_DISCOVERY_URL}
           audience = ""
           audience = ${?LOGINSERVICE_IDPORTEN_AUDIENCE}
       },{
          alias = "tokenx"
          discovery_endpoint = ""
          discovery_endpoint = ${?TOKEN_X_WELL_KNOWN_URL}
          audience = ""
          audience = ${?TOKEN_X_CLIENT_ID}
       }]
       scopes = {
           k9_selvbetjening_oppslag_tokenx_audience = ${?K9_SELVBETJENING_OPPSLAG_TOKENX_AUDIENCE}
       }
    }
    authorization {
        cookie_name = ""
        cookie_name = ${?COOKIE_NAME}
    }
    redis {
        host=""
        host=${?REDIS_HOST}
        port="6379"
    }
    storage {
        passphrase=""
        passphrase=${?STORAGE_PASSPHRASE}
    }
    kafka {
        bootstrap_servers = ""
        bootstrap_servers = ${?KAFKA_BROKERS}
        truststore_path = ""
        truststore_path = ${?KAFKA_TRUSTSTORE_PATH}
        credstore_password = ""
        credstore_password = ${?KAFKA_CREDSTORE_PASSWORD}
        keystore_path = ""
        keystore_path = ${?KAFKA_KEYSTORE_PATH}
    }
    trust_store {
        path = ""
        path = ${?NAV_TRUSTSTORE_PATH}
        password = ""
        password = ${?NAV_TRUSTSTORE_PASSWORD}
    }
    cache{
        barn{
            expiry_in_minutes = "30"
            expiry_in_minutes = ${?CACHE_EXPIRY_IN_MINUTES}
            max_size = "500"
            max_size = ${?CACHE_MAX_SIZE}
        }
    }
}
